node n2 {
    type router
    model aircraft
    network-config {
	hostname n2
	!
	interface eth0
	 ip address 10.0.0.2/24
	!
    }
    canvas c1
    iconcoords {509.0 225.0}
    labelcoords {509.0 257.0}
    interface-peer {eth0 n6}
    custom-config {
	custom-config-id service:PTracks
	custom-command PTracks
	config {
	files=('ptracks.sh', )
	}
    }
    custom-config {
	custom-config-id service:PTracks:ptracks.sh
	custom-command ptracks.sh
	config {
	#!/bin/sh
	# auto-generated by PTracks (ptracks.py)
	nTrf=2
	
	python -m adsb.fly $nTrf
	
	}
    }
    custom-config {
	custom-config-id service:TrackS
	custom-command TrackS
	config {
	files=('tracks.cfg', 'CINE0001.exe.xml', 'CINE0001.trf.xml', 'tabTrj.xml', 'tracks.sh', )
	}
    }
    custom-config {
	custom-config-id service:TrackS:tabTrj.xml
	custom-command tabTrj.xml
	config {
	<?xml version='1.0' encoding='UTF-8'?>
	<!DOCTYPE trajetorias>
	<trajetorias VERSION="0001" CODE="1961" FORMAT="NEWTON">
	
	    <trajetoria nTrj="2">
	        <descricao>001 - LUZ / ALINA</descricao>
	
	        <breakpoint nBrk="1">
	            <coord>
	                <tipo>L</tipo>
	                <campoA>-23.014665</campoA>
			<campoB>-46.186023</campoB>
	            </coord>
	            <altitude>10000</altitude>
	            <velocidade>210</velocidade>
	        </breakpoint>
	
	        <breakpoint nBrk="2">
	            <coord>
	                <tipo>L</tipo>
	                <campoA>-23.294799</campoA>
	                <campoB>-45.715223</campoB>
	            </coord>
	            <altitude>8000</altitude>
	            <velocidade>300</velocidade>
	        </breakpoint>
	
	        <breakpoint nBrk="3">
	            <coord>
	                <tipo>L</tipo>
	                <campoA>-23.014665</campoA>
			<campoB>-46.186023</campoB>
	            </coord>
	            <altitude>10000</altitude>
	            <velocidade>210</velocidade>
	        </breakpoint>
	    </trajetoria>
	
	</trajetorias>
	
	}
    }
    custom-config {
	custom-config-id service:TrackS:CINE0001.trf.xml
	custom-command CINE0001.trf.xml
	config {
	<?xml version='1.0' encoding='UTF-8'?>
	<!DOCTYPE trafegos>
	<trafegos VERSION="0001" CODE="1961" FORMAT="NEWTON">
	
	    <trafego nTrf="2">
	        <designador>B737</designador>
	        <ssr>7003</ssr>
	        <indicativo>TAM6543</indicativo>
	        <origem>SBBR</origem>
	        <destino>SBRJ</destino>
	        <procedimento>TRJ002</procedimento>
	        <temptrafego>0</temptrafego>
	        <coord>
	            <tipo>L</tipo>
	            <campoA>-23.315526</campoA>
	            <campoB>-46.173029</campoB>
	        </coord>
	        <velocidade>250</velocidade>
	        <altitude>5000</altitude>
	        <proa>46</proa>
	    </trafego>
	
	</trafegos>
	
	}
    }
    services {zebra OSPFv3MDR vtysh IPForward DefaultMulticastRoute GPSd AdsbOut}
}

node n4 {
    type router
    model ground-station
    network-config {
	hostname n4
	!
	interface eth1
	 ip address 10.0.1.1/24
	!
	interface eth0
	 ip address 10.0.0.3/24
	!
    }
    canvas c1
    iconcoords {518.0 329.0}
    labelcoords {518.0 361.0}
    interface-peer {eth0 n6}
    interface-peer {eth1 n5}
    services {zebra OSPFv3MDR vtysh IPForward GPSd AdsbIn}
    custom-config {
	custom-config-id service:AdsbIn
	custom-command AdsbIn
	config {
	files=('adsb_in.cfg', 'adsb_in.sh', )
	}
    }
    custom-config {
	custom-config-id service:AdsbIn:adsb_in.cfg
	custom-command adsb_in.cfg
	config {
	[General]
	id = n4
	destinations = dst01 dst02
	
	[dst01]
	type = dump1090
	server = 10.0.2.10
	port = 30001
	
	[dst02]
	type = database
	server = 172.17.255.254
	dbname = atn_sim
	dbuser = atn_sim
	dbpass = atn_sim
	
	
	}
    }
}

node n5 {
    type router
    model mdr
    network-config {
	hostname n5
	!
	interface eth6
	 ip address 10.0.7.1/24
	 ipv6 address 2001:7::1/64
	!
	interface eth5
	 ip address 10.0.6.2/24
	 ipv6 address 2001:6::2/64
	!
	interface eth4
	 ip address 10.0.5.2/24
	 ipv6 address 2001:5::2/64
	!
	interface eth3
	 ip address 10.0.4.2/24
	 ipv6 address 2001:4::2/64
	!
	interface eth2
	 ip address 10.0.3.2/24
	 ipv6 address 2001:3::2/64
	!
	interface eth1
	 ip address 10.0.2.1/24
	 ipv6 address 2001:2::1/64
	!
	interface eth0
	 ip address 10.0.1.2/24
	 ipv6 address 2001:1::2/64
	!
    }
    canvas c1
    iconcoords {520.0 417.0}
    labelcoords {520.0 449.0}
    interface-peer {eth0 n4}
    interface-peer {eth1 n7}
    interface-peer {eth2 n3}
    interface-peer {eth3 n8}
    interface-peer {eth4 n10}
    interface-peer {eth5 n9}
    interface-peer {eth6 n13}
}

node n6 {
    type wlan
    network-config {
	hostname 1090Mhz
	!
	interface wireless
	 ipv6 address 2001:0::0/128
	 ip address 10.0.0.0/24
	!
	mobmodel
	coreapi
	emane_rfpipe
	!
    }
    custom-config {
	custom-config-id emane_rfpipe
	custom-command {11 3 11 2 10 9 9 11 9 9 4 4 4 2 9 9 9 11 10 4 10}
	config {
	enablepromiscuousmode=0
	datarate=1M
	flowcontrolenable=0
	flowcontroltokens=10
	pcrcurveuri=/usr/share/emane/xml/models/mac/rfpipe/rfpipepcr.xml
	jitter=0.0
	delay=0.0
	radiometricenable=0
	radiometricreportinterval=1.0
	neighbormetricdeletetime=60.0
	bandwidth=1M
	frequency=1.090G
	frequencyofinterest=1.090G
	subid=1
	systemnoisefigure=4.0
	txpower=100.0
	fixedantennagain=100.0
	fixedantennagainenable=1
	noisemode=none
	noisebinsize=20
	propagationmodel=freespace
	}
    }
    custom-config {
	custom-config-id basic_range
	custom-command {3 3 9 9 9}
	config {
	range=275
	bandwidth=54000000
	jitter=0
	delay=20000
	error=0
	}
    }
    canvas c1
    iconcoords {494.0 31.0}
    labelcoords {494.0 63.0}
    interface-peer {e1 n2}
    interface-peer {e3 n4}
    interface-peer {e2 n8}
    interface-peer {e4 n3}
    interface-peer {e5 n10}
    interface-peer {e6 n9}
    interface-peer {e7 n11}
    interface-peer {e9 n15}
    interface-peer {e0 n1}
}

node n7 {
    type router
    model host
    network-config {
	hostname n7
	!
	interface eth0
	 ip address 10.0.2.10/24
	 ipv6 address 2001:2::10/64
	!
    }
    canvas c1
    iconcoords {832.0 416.0}
    labelcoords {832.0 448.0}
    interface-peer {eth0 n5}
    services {DefaultRoute SSH Dump1090}
}

node n3 {
    type router
    model ground-station
    network-config {
	hostname n3
	!
	interface eth1
	 ip address 10.0.3.1/24
	!
	interface eth0
	 ip address 10.0.0.4/24
	!
    }
    canvas c1
    iconcoords {152.0 54.0}
    labelcoords {152.0 86.0}
    interface-peer {eth0 n6}
    services {zebra OSPFv3MDR vtysh IPForward GPSd AdsbIn}
    interface-peer {eth1 n5}
    custom-config {
	custom-config-id service:AdsbIn
	custom-command AdsbIn
	config {
	files=('adsb_in.cfg', 'adsb_in.sh', )
	}
    }
    custom-config {
	custom-config-id service:AdsbIn:adsb_in.cfg
	custom-command adsb_in.cfg
	config {
	[General]
	id = n3
	destinations = dst01 dst02
	
	[dst01]
	type = dump1090
	server = localhost
	port = 30001
	
	[dst02]
	type = database
	server = 172.17.255.254
	dbname = atn_sim
	dbuser = atn_sim
	dbpass = atn_sim
	
	
	}
    }
}

node n8 {
    type router
    model ground-station
    network-config {
	hostname n8
	!
	interface eth1
	 ip address 10.0.4.1/24
	 ipv6 address 2001:4::1/64
	!
	interface eth0
	 ip address 10.0.0.1/24
	 ipv6 address 2001:0::1/128
	!
    }
    canvas c1
    iconcoords {800.0 47.0}
    labelcoords {800.0 79.0}
    interface-peer {eth0 n6}
    services {zebra OSPFv3MDR vtysh IPForward GPSd AdsbIn}
    interface-peer {eth1 n5}
    custom-config {
	custom-config-id service:AdsbIn
	custom-command AdsbIn
	config {
	files=('adsb_in.cfg', 'adsb_in.sh', )
	}
    }
    custom-config {
	custom-config-id service:AdsbIn:adsb_in.cfg
	custom-command adsb_in.cfg
	config {
	[General]
	id = n8
	destinations = dst01 dst02
	
	[dst01]
	type = dump1090
	server = localhost
	port = 30001
	
	[dst02]
	type = database
	server = 172.17.255.254
	dbname = atn_sim
	dbuser = atn_sim
	dbpass = atn_sim
	
	
	}
    }
}

node n9 {
    type router
    model ground-station
    network-config {
	hostname n9
	!
	interface eth1
	 ip address 10.0.6.1/24
	!
	interface eth0
	 ip address 10.0.0.6/24
	!
    }
    canvas c1
    iconcoords {806.0 681.0}
    labelcoords {806.0 713.0}
    interface-peer {eth0 n6}
    services {zebra OSPFv3MDR vtysh IPForward GPSd AdsbIn}
    interface-peer {eth1 n5}
    custom-config {
	custom-config-id service:AdsbIn
	custom-command AdsbIn
	config {
	files=('adsb_in.cfg', 'adsb_in.sh', )
	}
    }
    custom-config {
	custom-config-id service:AdsbIn:adsb_in.cfg
	custom-command adsb_in.cfg
	config {
	[General]
	id = n9
	destinations = dst01 dst02
	
	[dst01]
	type = dump1090
	server = localhost
	port = 30001
	
	[dst02]
	type = database
	server = 172.17.255.254
	dbname = atn_sim
	dbuser = atn_sim
	dbpass = atn_sim
	
	
	}
    }
}

node n10 {
    type router
    model ground-station
    network-config {
	hostname n10
	!
	interface eth1
	 ip address 10.0.5.1/24
	!
	interface eth0
	 ip address 10.0.0.5/24
	!
    }
    canvas c1
    iconcoords {156.0 666.0}
    labelcoords {156.0 698.0}
    interface-peer {eth0 n6}
    services {zebra OSPFv3MDR vtysh IPForward GPSd AdsbIn}
    interface-peer {eth1 n5}
    custom-config {
	custom-config-id service:AdsbIn
	custom-command AdsbIn
	config {
	files=('adsb_in.cfg', 'adsb_in.sh', )
	}
    }
    custom-config {
	custom-config-id service:AdsbIn:adsb_in.cfg
	custom-command adsb_in.cfg
	config {
	[General]
	id = n10
	destinations = dst01 dst02
	
	[dst01]
	type = dump1090
	server = localhost
	port = 30001
	
	[dst02]
	type = database
	server = 172.17.255.254
	dbname = atn_sim
	dbuser = atn_sim
	dbpass = atn_sim
	
	
	}
    }
}

node n11 {
    type router
    model PC
    network-config {
	hostname n11
	!
	interface eth0
	 ip address 10.0.0.21/24
	 ipv6 address 2001:0::20/128
	!
    }
    canvas c1
    iconcoords {436.0 146.0}
    labelcoords {436.0 178.0}
    interface-peer {eth0 n6}
    services {DefaultRoute AdsbReplay GPSd AdsbIn}
    custom-config {
	custom-config-id service:Flooder
	custom-command Flooder
	config {
	files=('flooder.sh', )
	}
    }
    custom-config {
	custom-config-id service:Flooder:flooder.sh
	custom-command flooder.sh
	config {
	#!/bin/sh
	# auto-generated by Flooder (flooder.py)
	cd /opt/adsb/ptracks
	python newton.py --exe FLOOD2 &
	python /opt/adsb/flooder.py --dest=10.0.0.255 -b
	
	}
    }
}

node n13 {
    type router
    model host
    network-config {
	hostname n13
	!
	interface eth1
	 ip address 10.0.8.10/24
	!
	interface eth0
	 ip address 10.0.7.10/24
	!
    }
    canvas c1
    iconcoords {519.0 639.0}
    labelcoords {519.0 671.0}
    interface-peer {eth0 n5}
    interface-peer {eth1 n14}
    services {DefaultRoute SSH AIMod}
    custom-config {
	custom-config-id service:AIMod
	custom-command AIMod
	config {
	files=('aimod.sh', 'aimod.cfg', )
	}
    }
    custom-config {
	custom-config-id service:AIMod:aimod.cfg
	custom-command aimod.cfg
	config {
	[General]
	id = MLAT-SRV
	
	; DB where unprocessed messsages are stored
	dbname = atn_sim
	dbuser = atn_sim
	dbpass = atn_sim
	dbhost = 172.17.255.254
	
	; Destination(s) of reliable messages
	destinations = Dump1090
	
	[Dump1090]
	type = dump1090
	server = 10.0.8.11
	port = 30001
	
	}
    }
    custom-config {
	custom-config-id service:MysqlProxy
	custom-command MysqlProxy
	config {
	files=('mysql-proxy.sh', )
	}
    }
    custom-config {
	custom-config-id service:MysqlProxy:mysql-proxy.sh
	custom-command mysql-proxy.sh
	config {
	#!/bin/sh
	# auto-generated by MysqlProxy (mysql.py)
	exec /usr/bin/mysql-proxy --plugins=proxy --proxy-lua-script=/usr/share/mysql-proxy/rw-splitting.lua --log-level=debug --proxy-backend-addresses=172.17.255.254:3306 --proxy-address=:3306
	
	}
    }
}

node n14 {
    type router
    model host
    network-config {
	hostname n14
	!
	interface eth0
	 ip address 10.0.8.11/24
	!
    }
    canvas c1
    iconcoords {296.0 640.0}
    labelcoords {296.0 672.0}
    interface-peer {eth0 n13}
    services {DefaultRoute SSH Dump1090}
}

node n15 {
    type router
    model host
    network-config {
	hostname n15
	!
	interface eth0
	 ip address 10.0.0.10/24
	 ipv6 address 2001:0::10/128
	!
    }
    canvas c1
    iconcoords {32.0 380.0}
    labelcoords {32.0 412.0}
    interface-peer {eth0 n6}
    services {DefaultRoute SSH TrackServer}
}

node n1 {
    type router
    model aircraft
    network-config {
	hostname n1
	!
	interface eth0
	 ip address 10.0.0.7/24
	 ipv6 address 2001:0::2/128
	!
    }
    canvas c1
    iconcoords {637.0 45.0}
    labelcoords {637.0 77.0}
    interface-peer {eth0 n6}
    services {zebra OSPFv3MDR vtysh IPForward DefaultMulticastRoute GPSd AdsbOut}
}

link l2 {
    nodes {n6 n2}
}

link l4 {
    nodes {n6 n4}
}

link l5 {
    nodes {n4 n5}
    bandwidth 0
}

link l6 {
    nodes {n5 n7}
    bandwidth 0
}

link l3 {
    nodes {n6 n8}
}

link l7 {
    nodes {n6 n3}
}

link l8 {
    nodes {n6 n10}
}

link l9 {
    nodes {n6 n9}
}

link l10 {
    nodes {n6 n11}
}

link l12 {
    nodes {n3 n5}
    bandwidth 0
}

link l13 {
    nodes {n8 n5}
    bandwidth 0
}

link l14 {
    nodes {n10 n5}
    bandwidth 0
}

link l15 {
    nodes {n9 n5}
    bandwidth 0
}

link l16 {
    nodes {n5 n13}
    bandwidth 0
}

link l17 {
    nodes {n13 n14}
    bandwidth 0
}

link l18 {
    nodes {n6 n15}
}

link l1 {
    nodes {n6 n1}
}

annotation a1 {
    iconcoords {472.0 684.0}
    type text
    label {MLAT Server}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a2 {
    type text
    iconcoords {813.0 584.0}
    label {}
    canvas c1
}

annotation a3 {
    type text
    iconcoords {813.0 584.0}
    label {}
    canvas c1
}

annotation a4 {
    iconcoords {256.0 687.0}
    type text
    label {Dump1090}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a5 {
    iconcoords {761.0 379.0}
    type text
    label {Dump1090 (no filter)}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a6 {
    type text
    iconcoords {905.0 541.0}
    label {}
    canvas c1
}

canvas c1 {
    name {Canvas1}
    refpt {0 0 -22.83712447 -46.58106755 2.0}
    scale {10000.0}
    size {1000 750}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses no
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

